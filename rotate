#!/bin/bash
#FILENAME=$(basename $BASH_SOURCE)
#echo $FILENAME #for debug purposes
ARGS=$(echo $#)
#echo $ARGS #for debug purposes

if [[ "$ARGS" = 0 ]]; then
  CURR=$(cat $HOME/.backgrounds/.current)
  MAX=$(ls $HOME/.backgrounds/ | wc -w)
  if [ "$CURR" = 0 ]; then
    echo "You must add files"
    exit
  fi
  if [ "$CURR" = "$MAX" ]; then
    echo "Maximum reached, wrapping around"
    echo 1 > $HOME/.backgrounds/.current
    feh --bg-fill $HOME/.backgrounds/1
    exit
  fi
  echo -n "Changing to background "
  echo $(($CURR+1))
  NEXT=$(($CURR+1))
  feh --bg-fill $HOME/.backgrounds/$NEXT
  echo $(($CURR+1)) > $HOME/.backgrounds/.current
  exit
fi

if [[ $1 = "--help" ]]; then
  echo "On first run: 'rotate --initialize'"
  echo "To add a file: 'rotate --add /path/to/file'"
  echo "To randomize file order: 'rotate --shuffle'"
  echo "To remove a file: 'rotate --delete filenumber'"
  echo "To rotate background: 'rotate'"
  echo "To remove all traces of this program except the script itself: 'rotate --uninstall'"
fi

if [[ $1 = "--initialize" || $1 = "-i" ]]; then
  mkdir $HOME/.backgrounds
  touch $HOME/.backgrounds/.current
  exit
fi

CURR=$(cat $HOME/.backgrounds/.current)
MAX=$(ls $HOME/.backgrounds/ | wc -w)

if [[ $1 = "--add" || $1 = "-a" ]]; then
  X=$(identify $2 | cut -d ' ' -f 3)
  Y=$(echo $X | cut -d 'x' -f 1)
  Z=$(echo $x | cut -d 'x' -f 2)
  if [[ "$Y" -lt "$Z" ]]; then
    echo "This is portrait format! Cannot add $2"
    exit
  fi
  MAX=$(($MAX+1))
  #echo "Linking $2 to $HOME/.backgrounds/$MAX"
  ln -s $HOME/$2 $HOME/.backgrounds/$MAX
  exit
fi

if [[ $1 = "--delete" || $1 = "-d" ]]; then
  if [ $2 -lt $MAX ]; then
    rm $HOME/.backgrounds/$2
    mv $HOME/.backgrounds/$MAX $HOME/.backgrounds/$2
    exit
  fi
  if [ $2 -eq $MAX ]; then
    rm $HOME/.backgrounds/$2
    exit
  fi
  echo "Cannot find $2 in $HOME/.backgrounds"
  exit
fi

if [[ $1 = "-m" || $1 = "--max" ]]; then
  echo $MAX
  exit
fi

if [[ $1 = "--shuffle" || $1 = "-s" ]]; then
  touch $HOME/.backgrounds/.shufflelist
  touch $HOME/.backgrounds/.newlist
  COUNTER=$(echo 1)
  while [[ $COUNTER -le $MAX ]]; do
    IMAGEFILE=$(echo -n "$HOME/.backgrounds/" && echo $(($COUNTER)))
    readlink -f $IMAGEFILE >> $HOME/.backgrounds/.shufflelist
    #echo "removing $IMAGEFILE" #for debug purposes
    rm $HOME/.backgrounds/$COUNTER
    COUNTER=$(($COUNTER+1))
  done
  sort -R $HOME/.backgrounds/.shufflelist > $HOME/.backgrounds/.newlist
  COUNTER=$(echo 1)
  while [[ $COUNTER -le $MAX ]]; do
    IMAGEFILE=$(echo -n "$HOME/.backgrounds/" && echo $(($COUNTER)))
    LOCATION=$(cat $HOME/.backgrounds/.newlist | tail -$COUNTER | head -1)
    #echo $LOCATION #for debug purposes
    ln -s $LOCATION $HOME/.backgrounds/$COUNTER
    #echo -n "$COUNTER should equal " #for debug
    #ls $HOME/.backgrounds/ | wc -w #for debug
    COUNTER=$(($COUNTER+1))
  done
  rm $HOME/.backgrounds/.shufflelist
  rm $HOME/.backgrounds/.newlist
fi

if [[ $1 = "--uninstall" || $1 = "-u" ]]; then
  echo "Are you sure? This will delete all symlinks created."
  read RESPONSE
  if [[ $RESPONSE = y || $RESPONSE = yes || $RESPONSE = positive ]]; then
    rm $HOME/.backgrounds/.current
    rm $HOME/.backgrounds/*
    rmdir $HOME/.backgrounds/
    exit
  fi
  echo "Symlinks preserved."
fi

#TODO: silent when not verbose, add verbose flag
